dependencies {
	implementation group: 'com.peterabeles', name: 'autofloat', version: auto64to32_version
	implementation group: 'com.peterabeles', name: 'autoconcurrent', version: auto64to32_version
	api group: 'commons-io', name: 'commons-io', version: commons_io_version
}

createVersionFile.enabled = true

gversion {
	srcDir = "../boofcv-types/src/main/java"
	classPackage = "boofcv"
	className = "BoofVersion"
	annotate = true
}

task(autogenerateDerived, dependsOn: 'classes', type: JavaExec) {
	setMainClass('boofcv.AutocodeMasterApp')
	classpath = sourceSets.main.runtimeClasspath
}

// Invoking 'autogenerate' will call all project wide auto generation functions
task autogenerateDep() { // forcing it to call autogenerateSource first
	dependsOn ':main:boofcv-ip:autogenerateSource'
}
task autogenerate(dependsOn:'autogenerateDep') {
	// generate derived needs the 'autogenerateSource' to run first since it uses it as a template
	dependsOn 'autogenerateDerived'

	tasks.findByName('autogenerateDerived').mustRunAfter 'autogenerateDep'
}


// Create the version file when autogenerate runs
project.autogenerateDerived.dependsOn(project.createVersionFile)
